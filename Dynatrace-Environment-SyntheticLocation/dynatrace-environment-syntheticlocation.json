{
  "typeName": "Dynatrace::Environment::SyntheticLocation",
  "description": "Manage a synthetic location (V1) in Dynatrace.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "DynatraceAccess": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "description": "Personal Access Token",
          "type": "string",
          "pattern": "^[a-zA-Z0-9]+\\.[a-zA-Z0-9]{24}\\.[a-zA-Z0-9]{64}$"
        },
        "DynatraceEndpoint": {
          "description": "Endpoint URL to access Dynatrace API",
          "type": "string"
        }
      },
      "required": [
        "AccessToken",
        "Endpoint"
      ],
      "additionalProperties": false
    },
    "EntityId": {
      "description": "The Dynatrace entity ID of the location.",
      "type": "string"
    },
    "Type": {
      "description": "Defines the actual set of fields depending on the value. See one of the following objects:\n\n    PUBLIC -> PublicSyntheticLocation\n    PRIVATE -> PrivateSyntheticLocation\n    CLUSTER -> PrivateSyntheticLocation",
      "type": "string",
      "enum": [
        "PUBLIC",
        "PRIVATE",
        "CLUSTER"
      ]
    },
    "Name": {
      "description": "The name of the location.",
      "type": "string"
    },
    "CountryCode": {
      "description": "The country code of the location.\n\nUse the alpha-2 code of the ISO 3166-2 standard (https://dt-url.net/iso3166-2), (for example, AT for Austria or PL for Poland).",
      "type": "string"
    },
    "RegionCode": {
      "description": "The region code of the location.\n\nFor the USA or Canada use ISO 3166-2 state codes (without US- or CA- prefix), for example, VA for Virginia or OR for Oregon.\n\nFor the rest of the world use FIPS 10-4 codes (https://dt-url.net/fipscodes).",
      "type": "string"
    },
    "City": {
      "description": "The city of the location.",
      "type": "string"
    },
    "Latitude": {
      "description": "The latitude of the location in DDD.dddd format.",
      "type": "number"
    },
    "Longitude": {
      "description": "The latitude of the location in DDD.dddd format.",
      "type": "number"
    },
    "Status": {
      "description": "The status of the location:\n\n    ENABLED: The location is displayed as active in the UI. You can assign monitors to the location.\n    DISABLED: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.\n    HIDDEN: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as HIDDEN when no monitor is assigned to it.",
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED",
        "HIDDEN"
      ]
    },
    "Nodes": {
      "description": "A list of synthetic nodes belonging to the location.",
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "items": {
        "type": "string"
      }
    },
    "AvailabilityLocationOutage": {
      "description": "The alerting of location outage is enabled (true) or disabled (false).",
      "type": "boolean"
    },
    "AvailabilityNodeOutage": {
      "description": "The alerting of node outage is enabled (true) or disabled (false).\n\nIf enabled, the outage of any node in the location triggers an alert.",
      "type": "boolean"
    },
    "LocationNodeOutageDelayInMinutes": {
      "description": "Alert if the location or node outage lasts longer than X minutes.\n\nOnly applicable when availabilityLocationOutage or availabilityNodeOutage is set to true.",
      "type": "integer"
    },
    "AvailabilityNotificationsEnabled": {
      "description": "The notifications of location and node outage is enabled (true) or disabled (false).",
      "type": "boolean"
    },
    "AutoUpdateChromium": {
      "description": "Auto upgrade of Chromium is enabled (true) or disabled (false).",
      "type": "boolean"
    },
    "SyntheticLocation": {
      "description": "Configuration of a synthetic location.",
      "type": "object",
      "properties": {
        "EntityId": {
          "$ref": "#/definitions/EntityId"
        },
        "Type": {
          "$ref": "#/definitions/Type"
        },
        "Name": {
          "$ref": "#/definitions/Name"
        },
        "CountryCode": {
          "$ref": "#/definitions/CountryCode"
        },
        "RegionCode": {
          "$ref": "#/definitions/RegionCode"
        },
        "City": {
          "$ref": "#/definitions/City"
        },
        "Latitude": {
          "$ref": "#/definitions/Latitude"
        },
        "Longitude": {
          "$ref": "#/definitions/Longitude"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "Nodes": {
          "$ref": "#/definitions/Nodes"
        },
        "AvailabilityLocationOutage": {
          "$ref": "#/definitions/AvailabilityLocationOutage"
        },
        "AvailabilityNodeOutage": {
          "$ref": "#/definitions/AvailabilityNodeOutage"
        },
        "LocationNodeOutageDelayInMinutes": {
          "$ref": "#/definitions/LocationNodeOutageDelayInMinutes"
        },
        "AvailabilityNotificationsEnabled": {
          "$ref": "#/definitions/AvailabilityNotificationsEnabled"
        },
        "AutoUpdateChromium": {
          "$ref": "#/definitions/AutoUpdateChromium"
        }
      },
      "additionalProperties": false
    }
  },
  "typeConfiguration": {
    "properties": {
      "DynatraceAccess": {
        "$ref": "#/definitions/DynatraceAccess"
      }
    },
    "additionalProperties": false,
    "required": [
      "DynatraceAccess"
    ]
  },
  "properties": {
    "DynatraceAccess": {
      "description": "Personal Access Token",
      "type": "string",
      "pattern": "^[a-zA-Z0-9]+\\.[a-zA-Z0-9]{24}\\.[a-zA-Z0-9]{64}$"
    },
    "DynatraceEndpoint": {
      "description": "Endpoint URL to access Dynatrace API",
      "type": "string"
    },
    "EntityId": {
      "$ref": "#/definitions/EntityId"
    },
    "Type": {
      "$ref": "#/definitions/Type"
    },
    "Name": {
      "$ref": "#/definitions/Name"
    },
    "CountryCode": {
      "$ref": "#/definitions/CountryCode"
    },
    "RegionCode": {
      "$ref": "#/definitions/RegionCode"
    },
    "City": {
      "$ref": "#/definitions/City"
    },
    "Latitude": {
      "$ref": "#/definitions/Latitude"
    },
    "Longitude": {
      "$ref": "#/definitions/Longitude"
    },
    "Status": {
      "$ref": "#/definitions/Status"
    },
    "Nodes": {
      "$ref": "#/definitions/Nodes"
    },
    "AvailabilityLocationOutage": {
      "$ref": "#/definitions/AvailabilityLocationOutage"
    },
    "AvailabilityNodeOutage": {
      "$ref": "#/definitions/AvailabilityNodeOutage"
    },
    "LocationNodeOutageDelayInMinutes": {
      "$ref": "#/definitions/LocationNodeOutageDelayInMinutes"
    },
    "AvailabilityNotificationsEnabled": {
      "$ref": "#/definitions/AvailabilityNotificationsEnabled"
    },
    "AutoUpdateChromium": {
      "$ref": "#/definitions/AutoUpdateChromium"
    },
    "Location": {
      "$ref": "#/definitions/SyntheticLocation"
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": false
  },
  "required": [
    "DynatraceAccess",
    "DynatraceEndpoint",
    "Name"
  ],
  "createOnlyProperties": [
    "/properties/DynatraceAccess",
    "/properties/DynatraceEndpoint"
  ],
  "readOnlyProperties": [
    "/properties/EntityId",
    "/properties/Location"
  ],
  "primaryIdentifier": [
    "/properties/EntityId"
  ],
  "handlers": {
    "create": {
      "permissions": []
    },
    "read": {
      "permissions": []
    },
    "update": {
      "permissions": []
    },
    "delete": {
      "permissions": []
    },
    "list": {
      "permissions": []
    }
  }
}
